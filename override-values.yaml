# OpenShift Helm Overrides

global:
   enabled: true
   tlsDisable: false
   openshift: true 
injector:
   enabled: true
   image:
    repository: "registry.connect.redhat.com/hashicorp/vault-k8s"
    tag: "1.2.1-ubi"
   agentImage:
    repository: "registry.connect.redhat.com/hashicorp/vault-enterprise"
    tag: "1.14.1-ent-ubi" 
server:
  enterpriseLicense:
    secretName: vault-ent-license
    secretKey: ""
  image:
    repository: "registry.connect.redhat.com/hashicorp/vault-enterprise"
    tag: "1.14.1-ent-ubi"
  route: 
    enabled: true
    tls: 
      termination: passthrough   
  extraEnvironmentVars:
      VAULT_CACERT: /vault/userconfig/vault-ha-tls/vault.ca
      VAULT_TLSCERT: /vault/userconfig/vault-ha-tls/vault.crt
      VAULT_TLSKEY: /vault/userconfig/vault-ha-tls/vault.key
  volumes:
      - name: userconfig-vault-ha-tls
        secret:
         defaultMode: 420
         secretName: vault-ha-tls
  volumeMounts:
      - mountPath: /vault/userconfig/vault-ha-tls
        name: userconfig-vault-ha-tls
        readOnly: true
  standalone:
      enabled: false
  affinity: ""
  ha:
      enabled: true
      replicas: 5
      raft:
         enabled: true
         setNodeId: true
         config: |
            ui = true
            listener "tcp" {
               tls_disable = 0
               address = "[::]:8200"
               cluster_address = "[::]:8201"
               tls_cert_file = "/vault/userconfig/vault-ha-tls/vault.crt"
               tls_key_file  = "/vault/userconfig/vault-ha-tls/vault.key"
               tls_client_ca_file = "/vault/userconfig/vault-ha-tls/vault.ca"
            }
            storage "raft" {
               path = "/vault/data"
            }
            disable_mlock = true
            service_registration "kubernetes" {}
